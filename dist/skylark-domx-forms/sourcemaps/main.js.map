{"version":3,"sources":["main.js"],"names":["define","langx","datax","forms","velm","$","delegate","fn","deserialize","wraps","wrapper_every_act","serializeArray","wrapper_map","serializeObject","serialize","wrapper_value"],"mappings":";;;;;;;AAAAA,QACI,gBACA,oBACH,UACG,oBACA,qBACA,gBACA,oBACA,qBACA,eACF,SAASC,EAAMC,EAAMC,EAAMC,EAAKC,GAqDjC,OAlDGD,EAAKE,UACD,cACA,iBACA,kBACA,aACDH,GAEHE,EAAEE,GAAGC,YAAcH,EAAEI,MAAMC,kBAAkBP,EAAMK,YAAaL,EAAOA,EAAMK,aAC7EH,EAAEE,GAAGI,eAAiBN,EAAEI,MAAMG,YAAYT,EAAMQ,eAAgBR,EAAOA,EAAMQ,gBAAe,GAC5FN,EAAEE,GAAGM,gBAAkBR,EAAEI,MAAMG,YAAYT,EAAMU,gBAAiBV,EAAOA,EAAMU,iBAAgB,GAC/FR,EAAEE,GAAGO,UAAYT,EAAEI,MAAMM,cAAcZ,EAAMW,UAAWX,EAAOA,EAAMW,WAwCjEX","file":"../main.js","sourcesContent":["define([\r\n    \"skylark-langx\",\r\n    \"skylark-domx-data\",\r\n\t\"./forms\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",\r\n    \"./deserialize\",\r\n    \"./serialize-array\",\r\n    \"./serialize-object\",\r\n    \"./serialize\"\r\n],function(langx,datax,forms,velm,$){\r\n\r\n    // from ./data\r\n    velm.delegate([\r\n        \"deserialize\",\r\n        \"serializeArray\",\r\n        \"serializeObject\",\r\n        \"serialize\"\r\n    ], forms);\r\n\r\n    $.fn.deserialize = $.wraps.wrapper_every_act(forms.deserialize, forms, forms.deserialize);\r\n    $.fn.serializeArray = $.wraps.wrapper_map(forms.serializeArray, forms, forms.serializeArray,true);\r\n    $.fn.serializeObject = $.wraps.wrapper_map(forms.serializeObject, forms, forms.serializeObject,true);\r\n    $.fn.serialize = $.wraps.wrapper_value(forms.serialize, forms, forms.serialize);\r\n\r\n\r\n/*\r\n    var r20 = /%20/g,\r\n        rbracket = /\\[\\]$/,\r\n        rCRLF = /\\r?\\n/g,\r\n        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n        rsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n    var rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\n    $.fn.serializeArray = function() {\r\n        return this.map( function() {\r\n\r\n            // Can add propHook for \"elements\" to filter or add form elements\r\n            var elements = datax.prop(this, \"elements\" );\r\n            return elements ? langx.makeArray( elements ) : this;\r\n        } )\r\n        .filter( function() {\r\n            var type = this.type;\r\n\r\n            // Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n            return this.name && !$(this).is( \":disabled\" ) &&\r\n                rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n                ( this.checked || !rcheckableType.test( type ) );\r\n        } )\r\n        .map( function( i, elem ) {\r\n            var val = $(this).val();\r\n\r\n            return val == null ?\r\n                null :\r\n                langx.isArray( val ) ?\r\n                    langx.map( val, function( val ) {\r\n                        return { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n                    } ) :\r\n                    { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n        } ).get();\r\n    };\r\n*/\r\n\r\n\treturn forms;\r\n});"]}